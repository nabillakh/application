h3. Service Listeners

Service listeners are a convenient way to define one handler for JMS messages. The simplest service listener looks like…

{code:java}
class PersonService {
    static exposes = ["jms"]
    def onMessage(msg) {
        // handle message
    }
}
{code}

This will register the @onMessage@ method as a listener for the JMS _topic_ named @«application name».person@ , where «application name» is the @app.name@ key from the @application.properties@ file.


h4. Configuration

The following configuration parameters can be set as static variables on the service class…

{table}
Property Name | Type | Default | Description
*destination* | String | «app name».«service name» | The named destination of the listener
*isTopic* | boolean | false | is the destination a topic ( @true@ ) or a queue ( @false@ )
*selector* | String | null | See the “Message Selector” section of http://java.sun.com/j2ee/1.4/docs/api/javax/jms/Message.html
*adapter* | String | "standard" | The adapter to use for this listener
*container* | String | "standard" | The container to use for this listener
{table}

{code:java}
class PersonService {
    static exposes = ["jms"]
    static destination = "somethingHappened"
    static isTopic = true
    static adapter = "custom"
    
    def onMessage(msg) {
        // handle message
    }
}
{code}