This plugin makes it easy to both send and receive JMS messages inside a Grails application. 

h3. Examples

The following are some simple examples to give you a feel for the plugin.

h4. Service Queue Listeners

{code}
class ListeningService {
    
    static exposes = ['jms']
    
    def onMessage(message) {
        assert message == 1
    }

}
{code}

{code}
class SomeController {
    
    def jmsService

    def someAction = {
        jmsService.send(service: 'listening', 1)
    }
}
{code}

h4. Service Method Queue Listeners

{code}
import grails.plugin.jms.Queue

class ListeningService {
    
    static exposes = ['jms']
    
    @Queue
    def receive(message) {
        assert message == 1
    }
}
{code}

{code}
class SomeController {
    
    def jmsService

    def someAction = {
        jmsService.send(service: 'listening', method: 'receive', 1)
    }
}
{code}

h4. Topic Listeners

{code}
import grails.plugin.jms.Subscriber

class ListeningService {
    
    static exposes = ['jms']
    
    @Subscriber
    def newMessages(message) {
        assert message == 1
    }
}
{code}

{code}
class SomeController {
    
    def jmsService

    def someAction = {
        jmsService.send(topic: 'newMessages', 1)
    }
}
{code}

h4. Post Processing Messages

{code}
import javax.jms.Message

class SomeController {
    
    def jmsService

    def someAction = {
        jmsService.send(service: 'initial', 1) { Message msg ->
            msg.JMSReplyTo = createDestination(service: 'reply')
            msg
        }
    }
}
{code}